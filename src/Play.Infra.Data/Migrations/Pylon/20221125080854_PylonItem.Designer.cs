// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Play.Infra.Data.Context;

#nullable disable

namespace Play.Infra.Data.Migrations.Pylon
{
    [DbContext(typeof(PlayPylonContext))]
    [Migration("20221125080854_PylonItem")]
    partial class PylonItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Play.Domain.Pylon.Models.PylonInvoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CustomerName");

                    b.Property<string>("CustomerTin")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CustomerTin");

                    b.Property<string>("EipUrl")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EipUrl");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime")
                        .HasColumnName("InvoiceDate");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("InvoiceNumber");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("PaymentMethod");

                    b.Property<decimal>("TotalAmountNoTax")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalAmountNoTax");

                    b.Property<decimal>("TotalAmountWithTax")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalAmountWithTax");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalVat");

                    b.Property<string>("VatRegime")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("VatRegime");

                    b.HasKey("Id");

                    b.ToTable("PylonInvoices");
                });

            modelBuilder.Entity("Play.Domain.Pylon.Models.PylonItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("AuxiliaryCode")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AuxiliaryCode");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Code");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Comments");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Description");

                    b.Property<string>("FactoryCode")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FactoryCode");

                    b.Property<Guid>("Heid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Heid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("PylonItems");
                });

            modelBuilder.Entity("Play.Domain.Pylon.Models.PylonInvoice", b =>
                {
                    b.OwnsMany("Play.Domain.Pylon.Models.PylonInvoiceLine", "InvoiceLines", b1 =>
                        {
                            b1.Property<Guid>("PylonInvoiceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("Id");

                            b1.Property<string>("ItemCode")
                                .IsRequired()
                                .HasColumnType("varchar(100)")
                                .HasColumnName("ItemCode");

                            b1.Property<string>("ItemDescription")
                                .IsRequired()
                                .HasColumnType("varchar(100)")
                                .HasColumnName("ItemDescription");

                            b1.Property<string>("ItemName")
                                .IsRequired()
                                .HasColumnType("varchar(100)")
                                .HasColumnName("ItemName");

                            b1.Property<string>("MeasurementUnit")
                                .IsRequired()
                                .HasColumnType("varchar(100)")
                                .HasColumnName("MeasurementUnit");

                            b1.Property<decimal>("Quantity")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Quantity");

                            b1.Property<decimal>("TotalPrice")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("TotalPrice");

                            b1.Property<decimal>("TotalPriceWithVat")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("TotalPriceWithVat");

                            b1.Property<decimal>("TotalVat")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("TotalVat");

                            b1.Property<decimal>("UnitPrice")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("UnitPrice");

                            b1.Property<decimal>("VatRate")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("VatRate");

                            b1.HasKey("PylonInvoiceId", "Id");

                            b1.ToTable("PylonInvoiceLines", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PylonInvoiceId");
                        });

                    b.Navigation("InvoiceLines");
                });
#pragma warning restore 612, 618
        }
    }
}
