using MalwarebytesOneviewApi.Core;
using MalwarebytesOneviewApi.Models;
using Play.Application.Malwarebytes.Interfaces;

namespace Play.Application.Malwarebytes.Services;

public class MalwarebytesSiteService : IMalwarebytesSiteService
{
    private readonly MbamOneViewApi _mbam;

    public MalwarebytesSiteService(MbamOneViewApi mbam)
    {
        _mbam = mbam;
    }

    /// <summary>
    ///     Get a list of all sites
    /// </summary>
    /// <returns>
    ///     <see cref="MbamOneViewSite" />
    /// </returns>
    public async Task<MbamOneViewSite[]> GetSitesAsync()
    {
        return await _mbam._SiteCommands.GetSites();
    }

    /// <summary>
    ///     Get endpoints for a given account id (found in the site object)
    /// </summary>
    /// <param name="accountId"></param>
    /// <returns>
    ///     <see cref="MbamOneViewEndpoint[]" />
    /// </returns>
    public async Task<MbamOneViewEndpoint[]> GetEndpointsAsync(string accountId)
    {
        return await _mbam._EndpointCommands.GetEndpointsAsync(accountId);
    }

    /// <summary>
    ///     Get total count of endpoints for a given account id (found in the site object)
    /// </summary>
    /// <param name="accountId"></param>
    /// <returns> int </returns>
    public async Task<int> GetEndpointCountAsync(string accountId)
    {
        var endpoints = await _mbam._EndpointCommands.GetEndpointsAsync(accountId);
        return endpoints.Length;
    }

    /// <summary>
    ///     Get total count of sites
    /// </summary>
    /// <returns> int </returns>
    public async Task<int> GetSiteCountAsync()
    {
        var sites = await _mbam._SiteCommands.GetSites();
        return sites.Length;
    }
}