namespace Play.Services.Api.Controllers.Malwarebytes;

[Route("malwarebytes/sites")]
public class MalwarebytesSiteController : ApiController
{
    private readonly IMalwarebytesSiteService _malwarebytesSiteService;

    public MalwarebytesSiteController(IMalwarebytesSiteService malwarebytesSiteService)
    {
        _malwarebytesSiteService = malwarebytesSiteService;
    }

    /// <summary>
    ///     Get a list of all sites
    /// </summary>
    /// <returns>
    ///     <see cref="MbamOneViewSite" />
    /// </returns>
    [HttpGet]
    [Authorize(Roles = "PlayAdmin")]
    public async Task<ActionResult> GetSites()
    {
        try
        {
            var sites = await _malwarebytesSiteService.GetSitesAsync();
            return CustomResponse(sites);
        }
        catch (Exception e)
        {
            AddError(e.Message);
            return CustomResponse();
        }
    }

    /// <summary>
    ///     Get endpoints for a given account id (found in the site object)
    /// </summary>
    /// <param name="accountId"></param>
    /// <returns>
    ///     <see cref="MbamOneViewEndpoint[]" />
    /// </returns>
    [HttpGet("{accountId}/endpoints")]
    [Authorize(Roles = "PlayAdmin")]
    public async Task<ActionResult> GetEndpoints(string accountId)
    {
        try
        {
            var endpoints = await _malwarebytesSiteService.GetEndpointsAsync(accountId);
            return CustomResponse(endpoints);
        }
        catch (Exception e)
        {
            AddError(e.Message);
            return CustomResponse();
        }
    }

    /// <summary>
    ///     Get total count of endpoints for a given account id (found in the site object)
    /// </summary>
    /// <param name="accountId"></param>
    [HttpGet("{accountId}/endpoints/count")]
    [Authorize(Roles = "PlayAdmin")]
    public async Task<ActionResult> GetEndpointCount(string accountId)
    {
        try
        {
            var count = await _malwarebytesSiteService.GetEndpointCountAsync(accountId);
            return CustomResponse(new { count });
        }
        catch (Exception e)
        {
            AddError(e.Message);
            return CustomResponse();
        }
    }

    /// <summary>
    ///     Get total count of sites
    /// </summary>
    [HttpGet("count")]
    [Authorize(Roles = "PlayAdmin")]
    public async Task<ActionResult> GetSiteCount()
    {
        try
        {
            var count = await _malwarebytesSiteService.GetSiteCountAsync();
            return CustomResponse(new { count });
        }
        catch (Exception e)
        {
            AddError(e.Message);
            return CustomResponse();
        }
    }
}