pipeline {
  //agent { label 'jenkins_label' }
  agent any
  environment {
    GITHUB_TOKEN=credentials('github-token')
    IMAGE_NAME='playsystems-integrator/play.api'
    IMAGE_VERSION='latest'
    timestamp = new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone('UTC'))
  }
  stages {
    stage('Init Github Check') {
          steps {
            withCredentials([usernamePassword(credentialsId: 'github-app-playsystems',
                                              usernameVariable: 'GITHUB_APP',
                                              passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {
                sh '''
                curl -H "Content-Type: application/json" \
                     -H "Accept: application/vnd.github.antiope-preview+json" \
                     -H "authorization: Bearer ${GITHUB_ACCESS_TOKEN}" \
                     -d '{ "name": "Docker image", \
                           "head_sha": "'${GIT_COMMIT}'", \
                           "status": "in_progress", \
                           "external_id": "36", \
                           "started_at": "'${timestamp}'", \
                           "output": { "title": "Build & Push Docker image!", \
                                       "summary": "You will be notified when the run has been completed!"}}' https://api.github.com/repos/PlaySystems-Integrator/Play.Api/check-runs
                '''
            }
          }
        }
    stage('install docker'){
      steps {
        sh 'sudo apt-get update || true'
        sh 'curl -fsSL get.docker.com -o get-docker.sh && sh get-docker.sh' 
      }
    }
    stage('cleanup') {
      steps {
        sh 'docker system prune -a --volumes --force || true'
      }
    }
    stage('init build'){
        steps{
    withCredentials([usernamePassword(credentialsId: 'gh-org-packages',
                                              usernameVariable: 'DOCKER_USER',
                                              passwordVariable: 'DOCKER_PASSWORD')]) {
                                              //replace NUGET_KEY with DOCKER_PASSWORD in the dockerfile
                sh 'sed -i "s/NUGET_KEY/${DOCKER_PASSWORD}/g" Dockerfile'
                sh 'docker build -t $IMAGE_NAME:$IMAGE_VERSION .'
            }
        }
        }
        
    stage('login to GHCR') {
      steps {
        sh 'echo $GITHUB_TOKEN_PSW | docker login ghcr.io -u $GITHUB_TOKEN_USR --password-stdin'
      }
    }
    stage('tag image') {
      steps {
        sh 'docker tag $IMAGE_NAME:$IMAGE_VERSION ghcr.io/$IMAGE_NAME:$IMAGE_VERSION'
      }
    }
    stage('push image') {
      steps {
        sh 'docker push ghcr.io/$IMAGE_NAME:$IMAGE_VERSION'
      }
    }
    stage('notify github') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'github-app-playsystems',
                                          usernameVariable: 'GITHUB_APP',
                                          passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {
            sh '''
            curl -H "Content-Type: application/json" \
                 -H "Accept: application/vnd.github.antiope-preview+json" \
                 -H "authorization: Bearer ${GITHUB_ACCESS_TOKEN}" \
                 -d '{ "name": "Docker image", \
                       "head_sha": "'${GIT_COMMIT}'", \
                       "status": "completed", \
                       "conclusion": "success", \
                       "completed_at": "'${timestamp}'", \
                       "external_id": "36", \
                       "output": { "title": "Build & Push Docker image!", \
                                   "summary": "The image has been successfully built and pushed to the registry!"}}' https://api.github.com/repos/PlaySystems-Integrator/Play.Api/check-runs
            '''
        }
      }
    }
  }
  post {
    always {
      sh 'docker system prune -a --volumes --force'
      sh 'rm Dockerfile'
    }
    failure {
      withCredentials([usernamePassword(credentialsId: 'github-app-playsystems',
                                        usernameVariable: 'GITHUB_APP',
                                        passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {
          sh '''
          curl -H "Content-Type: application/json" \
               -H "Accept: application/vnd.github.antiope-preview+json" \
               -H "authorization: Bearer ${GITHUB_ACCESS_TOKEN}" \
               -d '{ "name": "Docker image", \
                     "head_sha": "'${GIT_COMMIT}'", \
                     "status": "completed", \
                     "conclusion": "failure", \
                     "completed_at": "'${timestamp}'", \
                     "external_id": "36", \
                     "output": { "title": "Build & Push Docker image!", \
                                 "summary": "The image has not been built and pushed to the registry!"}}' https://api.github.com/repos/PlaySystems-Integrator/Play.Api/check-runs
          '''
      }
    }
  }
}
